// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPGDatabase;

namespace RPGDatabase.Migrations
{
    [DbContext(typeof(RpgContext))]
    [Migration("20220106173230_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("RPGDatabase.Models.Character.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Discretion")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceLvl")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("Pv")
                        .HasColumnType("int");

                    b.Property<int>("PvMax")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartyId")
                        .IsUnique();

                    b.ToTable("HeroSet");
                });

            modelBuilder.Entity("RPGDatabase.Models.Character.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Discretion")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceLvl")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("Pv")
                        .HasColumnType("int");

                    b.Property<int>("PvMax")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MonsterSet");
                });

            modelBuilder.Entity("RPGDatabase.Models.GamePart.LevelStory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IleType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("Pourcentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartyId")
                        .IsUnique();

                    b.ToTable("StorySet");
                });

            modelBuilder.Entity("RPGDatabase.Models.GamePart.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PartySet");
                });

            modelBuilder.Entity("RPGDatabase.Models.Item.Consomable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Pv")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConsomableSet");
                });

            modelBuilder.Entity("RPGDatabase.Models.Item.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Pv")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EquipmentSet");
                });

            modelBuilder.Entity("RPGDatabase.Models.Item.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .HasColumnType("longtext");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Pv")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeaponSet");
                });

            modelBuilder.Entity("RPGDatabase.Models.ManyToMany.HeroConsomable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConsomableId")
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsomableId");

                    b.HasIndex("HeroId");

                    b.ToTable("HeroConsomable");
                });

            modelBuilder.Entity("RPGDatabase.Models.ManyToMany.HeroEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("HeroId");

                    b.ToTable("HeroEquipment");
                });

            modelBuilder.Entity("RPGDatabase.Models.ManyToMany.HeroWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.HasIndex("WeaponId");

                    b.ToTable("HeroWeapon");
                });

            modelBuilder.Entity("RPGDatabase.Models.Character.Hero", b =>
                {
                    b.HasOne("RPGDatabase.Models.GamePart.Party", "Party")
                        .WithOne("Hero")
                        .HasForeignKey("RPGDatabase.Models.Character.Hero", "PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("RPGDatabase.Models.GamePart.LevelStory", b =>
                {
                    b.HasOne("RPGDatabase.Models.GamePart.Party", "Party")
                        .WithOne("Story")
                        .HasForeignKey("RPGDatabase.Models.GamePart.LevelStory", "PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("RPGDatabase.Models.ManyToMany.HeroConsomable", b =>
                {
                    b.HasOne("RPGDatabase.Models.Item.Consomable", "Consomable")
                        .WithMany("HeroConsomables")
                        .HasForeignKey("ConsomableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPGDatabase.Models.Character.Hero", "Hero")
                        .WithMany("HeroConsomables")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consomable");

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("RPGDatabase.Models.ManyToMany.HeroEquipment", b =>
                {
                    b.HasOne("RPGDatabase.Models.Item.Equipment", "Equipment")
                        .WithMany("HeroEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPGDatabase.Models.Character.Hero", "Hero")
                        .WithMany("HeroEquipments")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("RPGDatabase.Models.ManyToMany.HeroWeapon", b =>
                {
                    b.HasOne("RPGDatabase.Models.Character.Hero", "Hero")
                        .WithMany("HeroWeapons")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPGDatabase.Models.Item.Weapon", "Weapon")
                        .WithMany("HeroWeapons")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("RPGDatabase.Models.Character.Hero", b =>
                {
                    b.Navigation("HeroConsomables");

                    b.Navigation("HeroEquipments");

                    b.Navigation("HeroWeapons");
                });

            modelBuilder.Entity("RPGDatabase.Models.GamePart.Party", b =>
                {
                    b.Navigation("Hero");

                    b.Navigation("Story");
                });

            modelBuilder.Entity("RPGDatabase.Models.Item.Consomable", b =>
                {
                    b.Navigation("HeroConsomables");
                });

            modelBuilder.Entity("RPGDatabase.Models.Item.Equipment", b =>
                {
                    b.Navigation("HeroEquipments");
                });

            modelBuilder.Entity("RPGDatabase.Models.Item.Weapon", b =>
                {
                    b.Navigation("HeroWeapons");
                });
#pragma warning restore 612, 618
        }
    }
}
